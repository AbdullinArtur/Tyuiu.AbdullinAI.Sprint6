<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxFormula_AAI.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHwAAAA1CAYAAACDSY8aAAAABGdBTUEAALGPC/xhBQAAA3hJREFUeF7t
        mI3RwiAMht3EURzFURzFURzFUfzuqYmHfPy1gFLMc8eV9Adp3iRQD4Zh7IDb7fa4XC5LO5/Pj/v9/pBL
        xowgtHQP1+t1EV1MYzYkm19ZzfF4PJrgM0NJl+7SP51OJvivQDl3A8CYGNZvmpjGzJDVmtm2S58cBHYz
        27J8cmRX/mr2WVaI+z2rkD3f3vUyh9DcjAr8f6jUyZItX//3ivXZRG8Ea17MmbIRGuLvSj8ojY2wBsYc
        OZLgzMX+VKmE7E45saXgjKXVxO2v2WSlgtMoAGen1sZWgvO897m0jJkLOJ/cfI0MZIyIGqSl4NKtKs1r
        A8T4T1LMnOA4n6DRlgoehQzdmqWMz++IaaxBRKwSfAsEiRsYa8bW+TwtYxUq+NMK00pwRKYc+7/pretZ
        TPAK1PkhMTnn7KCXY81mSZ9HYERz+3JLESZ4PU3LdW8Q3NbwCko3WqMw5C69pvQpWlLF7Aaldu06+k2G
        +w5nQq1KpK51YnZhyIxJQEUaZgnCea0FahlAMYZyYgISYKjg7OG4T7xkj0DtAcHffL/By9MYXE4t4PTU
        j6VKI0GgY2rGql3yAp/IwC7ObAj+ah6UvLDz0v7gSafjsNiEmCxHef4VTAip11Kkxm7JqFmO37rMTZ3P
        0c1WggBxxAzC9VCGuOdUcC8AsvjzAYKAc7k2euYOgZ9R9HGemDGyZVeEXl2eSwLOqOMtKxA7VVI0c3NC
        EkhbhJO5rH7OKCAkXqxcK/rM03rHHwfRxXwtITlCgpeWdFpg7jreL7UwvuAl2eU/44LICMs1+lopsGsE
        NxqCKGSQbpZocilFUHDdDzAWwjEW/VKxgee2LAXGBhAotX4rubJfgwaemEODDzSgCfZQEgwF4uok5Vg0
        aa0IYjZFq4SYw4KfmKuYS6AOXZlUYM1ULb/0c3BfryzEaSVB922Yoyuw+HHseSMcTdddOV1ED2Fw2l7K
        uQ/+czN+OjRQxGwCDuu1N+gN/sglgK75+M3t7yZQWgrUI4A+Ae+voqV8QTDwjmLCEiCc21VVayESL75H
        sX0QPZbl7nkCY69L15QgBnsUbbHM9cUlW92NXAyCe4YA/ynIZj9LJTCyQvKcG0SxqmAMRChLCYJY5iIy
        FUDEfd3jrevGyCAWArtHufQPDQbuIbvdvtxiGIZhGIZhGIZhzMrh8AetcquxQwhNoAAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>